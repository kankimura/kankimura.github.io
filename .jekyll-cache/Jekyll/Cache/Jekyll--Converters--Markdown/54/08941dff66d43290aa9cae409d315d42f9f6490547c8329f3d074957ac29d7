I"(<p>JekyllとGitHub Pageでブログを作成したので、作成方法を説明します。
無料で簡単に作ることが出来たので、個人ブログをもちたい場合はオススメです。</p>

<!--more-->

<h1 id="jekyllとは">Jekyllとは？</h1>

<p>Jekyll(ジキル)とは静的サイトジェネレーターの一つです。
静的サイトジェネレータとはマークダウン式の記事とテーマをもとに静的ファイル（html/css/javascript）を自動生成してくれるツールです。<br />
マークダウン方式の書き方さえ分かればコードは書く必要がないので非常に楽です。<br />
Jekyll以外にも主要なものでGatsby、Hugo、Hexoといったものがありますが、私が知る範囲ではJekyllとHexoはテーマをサイトからダウンロード出来てマークダウン記事を作成するだけで良いので、簡単にやりたい場合はどちらかを選ぶと思います。<br />
Hexoは中国が開発元で、ググって見ても中国語の情報が多かったのでJekyllにしました。</p>

<h1 id="github-pageとは">Github Pageとは？</h1>
<p>GitHubPagesとはGitHubによる静的サイトのホスティングサービスです。<br />
要はブログのような情報が動的に変わらないコンテンツを公開するためのサービスです。<br />
Wordpressはサーバーのレンタル料金がかかってしまいますが、GitHub Pagesは無料なので簡単に試しにやって見ることが出来るのが良い点です。</p>

<p>JekyllとGithubPageを使用してブログを公開した場合以下のような感じになるます。</p>

<p><img src="images/2020-05-24/jekyll-github-pages.png" alt="jekyll-github" /></p>

<p>全体的な流れは以下のようになります。<br />
①マークダウン方式の記事を作成<br />
②記事とテーマをもとにhtml/css/javascriptを生成(これが静的サイトジェネレータのお仕事)<br />
③生成されたファイルをGitHubPagesにアップ<br />
④ブラウザからアクセスし、GitHubPagesにアップされたファイルを画面に表示する。</p>

<p>では実際にブログを作成して公開するまでの手順を以下の順で説明します。</p>

<ol>
  <li>環境構築(RubyとJekyllのインストール)</li>
  <li>ブログテーマのダウンロード</li>
  <li>テスト記事の投稿</li>
  <li>GitHub Pagesに公開</li>
</ol>

<hr />

<h3 id="1-環境構築">1. 環境構築</h3>
<h4 id="rubyのインストール">Rubyのインストール</h4>
<p>バージョン管理のためにrbenv,ruby-builをインストール</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ brew install rbenv ruby-build
$ echo 'eval "$(rbenv init -)"' &gt;&gt; ~/.bash_profile
$ source ~/.bash_profile
</code></pre></div></div>
<p>インストールするRubyのバージョンを指定してRubyをインストール</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rbenv install -l      //これで表示される最新のバージョンを指定する
$ rbenv install 2.6.0
$ rbenv global 2.6.0    //デフォルトで使用するバージョンを指定
</code></pre></div></div>
<h4 id="jekyllのインストール">Jekyllのインストール</h4>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gem install jekyll bundler    //Gem管理ツールbundlerとJekyllのインストール
$ jekyll new blog               //Jekyll用のディレクトリを作成
$ cd blog
$ bundle exec jekyll serve      //Jekyllをローカルで起動
</code></pre></div></div>
<p>http://localhost:4000 へアクセスしローカル環境でサイトが表示されていることを確認します。
ローカルで確認する際はbundle exec jekyll serveというコマンドでJekyllを起動する必要があります。<br />
起動中に記事を編集しても反映されるので編集しても再起動する必要はありません。</p>

<hr />

<h3 id="2-テーマのダウンロード">2. テーマのダウンロード</h3>
<p>今のままだとデフォルトのテーマで味気がないので、テーマをダウンロードします。
公式サイトに色々なテーマがありますが、 今回は<a href="https://jekyllthemes.io/jekyll-blog-themes" target="_blank" style="word-break: break-all;">ブログ用のテーマ</a>から無料のものを選択します。
私は <a href="https://jekyllthemes.io/theme/scriptor" target="_blank">Scriptor</a> というなかなかイケてるテーマにしました。</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd ~/     //ホームディレクトリに移動（これは好きな場所でOK）
$ git clone https://github.com/JustGoodThemes/Scriptor-Jekyll-Theme.git
$ bundle exec jekyll serve
</code></pre></div></div>
<p>http://localhost:4000 にアクセスして以下のようにテーマが反映されている事を確認します。</p>

<p><img src="images/2020-05-24/scriptor_template.png" alt="scriptor_template" /></p>

<hr />

<h3 id="3-テスト記事の作成">3. テスト記事の作成</h3>
<p>マークダウンファイルを作成して自分でも記事が作成出来る事を確認しましょう。</p>

<p>以下ディレクトリ配下に2020-01-01-test.mdというマークダウンファイルを作成
/Users/{username}/Scriptor-Jekyll-Theme/_posts</p>

<p>以下内容を記述して保存</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
layout: post
title: "test"
description: "test"
date: 2020-01-01
---
テストですよ。
</code></pre></div></div>
<p>http://localhost:4000 を更新すると作成した記事が反映されていることが分かります。</p>

<p><img src="images/2020-05-24/test-article.png" alt="test-article" /></p>

<p>今後記事を作成するする際はこのようにマークダウンファイルを作成してローカルで確認後にGitHubPagesにアップして公開する流れになります。</p>

<p>このままだとダウンロードしたままの情報が残ってしまいますので最低限以下は変更しておきましょう。</p>

<ul>
  <li>以下ディレクトリ配下の不要なマークダウンファイルを削除</li>
</ul>

<p>/Users/{username}/Scriptor-Jekyll-Theme/_posts</p>

<ul>
  <li>以下の筆者情報を変更</li>
</ul>

<p>/Users/{username}/Scriptor-Jekyll-Theme/_data/author.json</p>

<ul>
  <li>Aboutページの編集</li>
</ul>

<p>/Users/{username}/Scriptor-Jekyll-Theme/about.md</p>

<h3 id="4-github-pagesへ公開">4. GitHub Pagesへ公開</h3>

<h4 id="githubアカウントの作成">GitHubアカウントの作成</h4>
<p><a href="https://github.com/join" target="_blank">GitHubの公式サイト</a>でアカウントを登録します。</p>

<hr />

<p>####リポジトリの作成
 作成したアカウントでブログ用のリポジトリを作成します。(作成方法は以下を参考)
 リポジトリの名前は「username.git.io」として下さい。</p>

<p><a href="https://help.github.com/ja/enterprise/2.16/user/github/working-with-github-pages/creating-a-github-pages-site-with-jekyll">リポジトリ新規作成方法</a></p>

<h4 id="gitのインストール">Gitのインストール</h4>
<p>今回はパッケージ管理ツールのHomebrewでインストールしました。
 Homebrewがインストールされているか確認</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ brew -v
</code></pre></div></div>
<p>バージョン情報が出力されない場合はHomebrewをインストールする。</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
</code></pre></div></div>
<p>Homebrewでgitをインストールする。</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ brew install git
</code></pre></div></div>
<h4 id="github-pagesへ公開">GitHub Pagesへ公開</h4>
<p>ローカルリポジトリを作成してGitHubで作成してしたリモートリポジトリにコミット</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd ~/blogs
$ git init        //ローカルリポジトリを作成
$ git add .       //コミット対象ファイル追加
$ git commit -m "initial commit"    //コミット対象ファイルをローカルリポジトリにコミット
$ git remote set-url origin git@github.com:{username}/{username}.github.io.git    //コミット対象のリポジトリURLを指定
$ git push origin master
</code></pre></div></div>
<p>GitHubでリポジトリを見ると上記のコミット内容が反映されているはずです。
https://{username}.github.io/ にアクセスするとテーマが反映されている事を確認できます。
GitHub上で反映されているけどブラウザで反映されていない場合は少し時間を置いてから確認してみて下さい。</p>

<p>これでブログが公開されましたので、あとはローカルで記事を作成して完成したらGitHubに公開するという流れで記事を作成することが出来ます。
記事の作成自体は非常に簡単なのであとは自分の好きな事をガシガシ書いていきましょう。</p>

<hr />

<p><em>参考</em><br />
<a href="http://jmcglone.com/guides/github-pages/" target="_blank" style="word-break: break-all;">http://jmcglone.com/guides/github-pages/</a><br />
<a href="https://jekyllrb.com/docs/" target="_blank" style="word-break: break-all;">https://jekyllrb.com/docs/</a><br />
<a href="https://marbles.hatenablog.com/entry/2019/01/16/221417" target="_blank" style="word-break: break-all;">https://marbles.hatenablog.com/entry/2019/01/16/221417</a><br />
<a href="https://qiita.com/stkdev/items/0e2df27736acbea9bd26" target="_blank" style="word-break: break-all;">https://qiita.com/stkdev/items/0e2df27736acbea9bd26</a></p>
:ET